"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[128],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8495:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={slug:"/",id:"introduction",title:"Introduction"},s=void 0,c={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Spectacles is a distributed Discord bot framework.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/spec-tacles/website/edit/master/website/docs/introduction.md",tags:[],version:"current",frontMatter:{slug:"/",id:"introduction",title:"Introduction"},sidebar:"docs",next:{title:"Ping Pong",permalink:"/docs/ping_pong"}},p={},u=[{value:"Message Broker",id:"message-broker",level:2},{value:"Command Handler",id:"command-handler",level:2},{value:"Proxy",id:"proxy",level:2},{value:"Gateway",id:"gateway",level:2},{value:"Next Steps",id:"next-steps",level:2}],d={toc:u};function m(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Spectacles is a distributed Discord bot framework."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Architecture",src:n(8299).Z,width:"805",height:"257"})),(0,o.kt)("p",null,"A basic Spectacles bot runs 4 services:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Gateway"),(0,o.kt)("li",{parentName:"ol"},"Proxy"),(0,o.kt)("li",{parentName:"ol"},"Message broker"),(0,o.kt)("li",{parentName:"ol"},"Command handler")),(0,o.kt)("p",null,"The Spectacles organization provides the gateway, proxy and broker services. You are responsible for\nwriting your own command handler (that's why you're here, after all)."),(0,o.kt)("p",null,"Each of these services is fully stateless and can be easily scaled up or down across machines."),(0,o.kt)("h2",{id:"message-broker"},"Message Broker"),(0,o.kt)("p",null,"The message broker is the heart of a Spectacles application. Spectacles uses Redis as its message\nbroker:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n    --rm -it \\\n    -p 6379:6379 \\\n    redis\n")),(0,o.kt)("h2",{id:"command-handler"},"Command Handler"),(0,o.kt)("p",null,"To launch a basic command handler:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new project"),(0,o.kt)("li",{parentName:"ol"},"Install dependencies")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i ioredis @spectacles/brokers\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create a command handler called ",(0,o.kt)("inlineCode",{parentName:"li"},"index.mjs"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { Redis } from '@spectacles/brokers';\nimport RedisClient from 'ioredis';\n\nconst client = new RedisClient();\nconst broker = new Redis('gateway', client);\n\nbroker.on('MESSAGE_CREATE', async (msg, { ack }) => {\n    await ack();\n    console.log(msg);\n});\n\nbroker.subscribe('MESSAGE_CREATE');\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Run it with ",(0,o.kt)("inlineCode",{parentName:"li"},"node index.mjs"))),(0,o.kt)("h2",{id:"proxy"},"Proxy"),(0,o.kt)("p",null,"The proxy will handle all of your outgoing HTTP requests to Discord. To launch the Spectacles\nproxy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n    --rm -it \\\n    --network host\n    spectacles/proxy:latest\n")),(0,o.kt)("h2",{id:"gateway"},"Gateway"),(0,o.kt)("p",null,"The gateway manages your bot's connection to the Discord gateway. To launch the Spectacles gateway:"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Replace the ",(0,o.kt)("inlineCode",{parentName:"p"},"DISCORD_TOKEN")," environment variable with your bot's token."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'docker run \\\n    --rm -it \\\n    --network host\n    -e DISCORD_TOKEN="your token" \\\n    -e DISCORD_EVENTS=MESSAGE_CREATE \\\n    -e DISCORD_INTENTS=GUILD,GUILD_MESSAGES \\\n    -e BROKER_TYPE=redis \\\n    -e REDIS_URL=localhost:6379 \\\n    spectacles/gateway\n')),(0,o.kt)("h2",{id:"next-steps"},"Next Steps"),(0,o.kt)("p",null,"Send a message in a guild that your bot is in, and you will see it in the console output of your\ncommand handler."))}m.isMDXComponent=!0},8299:function(e,t,n){t.Z=n.p+"assets/images/architecture-a4d8d9c8f5d9db4e57c59170966c69a2.svg"}}]);